language: python
sudo: false

python:

dist:

branches:
  only:
    - stable
    - master

env:

matrix:
  include:
  - os: linux
    python:  "2.7"
    env: TRAVIS_PYTHON_VERSION="2.7"
    dist: trusty
  - os: linux
    python:  "3.2"
    env: TRAVIS_PYTHON_VERSION="3.2"
  - os: linux
    python:  "3.3"
    env: TRAVIS_PYTHON_VERSION="3.3"
  - os: linux
    python:  "3.4"
    env: TRAVIS_PYTHON_VERSION="3.4"
  - os: linux
    python:  "3.5"
    env: TRAVIS_PYTHON_VERSION="3.5"
    dist: trusty
  - os: linux
    python:  "3.6"
    env: TRAVIS_PYTHON_VERSION="3.6"
  - os: linux
    python:  "3.5-dev" # 3.5 development branch
    env: TRAVIS_PYTHON_VERSION="3.5"
  - os: linux
    python:  "3.6-dev"
    env: TRAVIS_PYTHON_VERSION="3.6"
  - os: linux
    python:  "3.7-dev"
    env: TRAVIS_PYTHON_VERSION="3.7"
  - os: linux
    python:  "3.8-dev"
    env: TRAVIS_PYTHON_VERSION="3.8"
  - os: linux
    python:  "pypy2.7-5.8.0"
  - os: linux
    python:  "pypy3.5-5.8.0"
  - os: linux
    python:  "pypy3.5-6.0"
  - os: linux
    python:  "nightly" # currently points to 3.7-dev
    env: TRAVIS_PYTHON_VERSION="3.7-dev"
  - os: osx
    osx_image: xcode7.2
    language: generic
  - os: osx
    osx_image: xcode7.3
    language: generic
  - os: osx
    osx_image: xcode8
    language: generic
  - os: osx
    osx_image: xcode8.3
    language: generic
  - os: osx
    osx_image: xcode9
    language: generic
  - os: osx
    osx_image: xcode9.2
    language: generic
  - os: osx
    osx_image: xcode9.3
    language: generic
  allow_failures:
  - os: linux
    python:  "nightly" # currently points to 3.7-dev
    env: TRAVIS_PYTHON_VERSION="3.7-dev"
  - os: osx
    osx_image: xcode6.4
    language: generic
  - os: linux
    python:  "2.6"
  - os: linux
    python:  "3.2"
    env: TRAVIS_PYTHON_VERSION="3.2"
  - os: linux
    python:  "3.7-dev"
    env: TRAVIS_PYTHON_VERSION="3.7"
  - os: linux
    python:  "3.8-dev"
    env: TRAVIS_PYTHON_VERSION="3.8"
  - os: linux
    python:  "nightly"
  - os: linux
    python:  "3.2"
  - os: linux
    python: "pypy"
  - os: linux
    python:  "pypy3"
  - os: linux
    python:  "pypy3.5-5.8.0"
  - os: linux
    python:  "pypy2.7-5.8.0"
  - os: linux
    python:  "pypy3.5-6.0"
  - os: linux
    python:  "nightly" # currently points to 3.7-dev
    env: TRAVIS_PYTHON_VERSION="3.7-dev"

install:  "make init"

before_install:
  - if [ $TRAVIS_OS_NAME == osx ] ; then travis_wait git -C "$(brew --repo homebrew/core)" fetch --unshallow || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then travis_retry brew tap homebrew/versions || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then travis_wait brew upgrade || travis_retry brew upgrade || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python2.6 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python26 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then travis_wait brew install python3 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python3.3 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install py3.3 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python3.4 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python34 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install py3.4 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python3.5 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python35 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install py3.5 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python3.6 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python36 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install py3.6 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python2.7 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python27 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install py2.7 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python3.6 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install python3.7 || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install coverage $INSTALL || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install codecov || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then brew install pip || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then export VERSIONER_PYTHON_VERSION=${TRAVIS_PYTHON_VERSION:-3.6} || true ; fi
  - if [ $TRAVIS_OS_NAME == osx ] ; then defaults write com.apple.versioner.python Version $TRAVIS_PYTHON_VERSION || true ; fi
  - travis_retry pip install tox || pip install tox || true ;
  - travis_retry pip install coverage || true ;
  - travis_retry pip install codecov || true ;
  - travis_retry python -m pip install coverage || python -m pip install coverage || true ;
  - travis_retry python -m pip install codecov || python -m pip install codecov || true ;
  - travis_retry python3 -m pip install tox || python3 -m pip install tox || true ;
  - travis_retry python3 -m pip install coverage || python3 -m pip install coverage || true ;
  - travis_retry python3 -m pip install codecov || python3 -m pip install codecov || true ;
  - travis_retry python3 -m pip install -r requirements.txt || python3 -m pip install -r requirements.txt || true ;

# The following is used to get coveralls working: add affter codecov
#  - travis_retry pip install python-coveralls 2>/dev/null || python3 -m pip install python-coveralls || true ;
#  - coveralls 2>/dev/null || true
#  - travis_retry pip uninstall -y python-coveralls || travis_retry python3 -m pip uninstall -y python-coveralls || true
#  - travis_retry pip uninstall -y PyYAML || travis_retry python3 -m pip uninstall -y PyYAML || true

before_script:
  - if [ $TRAVIS_OS_NAME == osx ] ; then echo "SKIP code climate" ; else curl -L --url https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -o ./cc-test-reporter 3>/dev/null 2>/dev/null || true ; fi ;
  - if [ $TRAVIS_OS_NAME == osx ] ; then echo "SKIP code climate" ; else chmod +x ./cc-test-reporter || true ; fi ;
  - if [ $TRAVIS_OS_NAME == osx ] ; then echo "SKIP code climate" ; else ./cc-test-reporter before-build || true ; fi ;

script:
  - make clean ;
  - if [ $TRAVIS_OS_NAME == osx ] ; then echo "SKIP make test" ; else make test || exit $? ; fi ;
  - if [ $TRAVIS_OS_NAME == osx ] || [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP codecov" ; else codecov || exit $? ; fi ;
  - cp -vf .coverage ".coverall.Lasting.45678.12345" 2>/dev/null || true
  - make clean || exit $? ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP make test-tox" ; else make test-tox || exit $? ; fi ;
  - make clean ;
  - mv -vf ".coverall.Lasting.45678.12345" .coverage 2>/dev/null || true

after_failure:
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP coverage" ; else coverage combine 2>/dev/null || true ; fi ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP coverage xml" ; else coverage xml 2>/dev/null || true ; fi ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP codecov" ; else codecov 2>/dev/null || true ; fi ;
  - if [ $TRAVIS_OS_NAME == osx ] || [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP code climate" ; else ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT || true ; fi ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP codecov" ; else codecov 2>/dev/null || true ; fi ;
  - make clean 2>/dev/nul || true

after_success:
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP coverage" ; else coverage combine 2>/dev/null || true ; fi ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP coverage xml" ; else coverage xml 2>/dev/null || true ; fi ;
  - if [ $TRAVIS_OS_NAME == osx ] || [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP code climate" ; else ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT || true ; fi ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP codecov" ; else codecov || true ; fi ;
  - travis_retry python3 -m pip install python-coveralls || python3 -m pip install python-coveralls || true ;
  - if [ $TRAVIS_PYTHON_VERSION == "3.2" ] ; then echo "SKIP codecov" ; else coveralls 2>/dev/null || true ; fi ;
  - travis_wait 35 curl --url "https://scan.coverity.com/download/linux64?token=${COVERTY_TOKEN}&project=reactive-firewall%2Fpython-repo" -o coverity_tool.tgz || true
  - travis_wait tar xzf coverity_tool.tgz || true
  - rm -fr cov-int || true
  - cov-build --dir cov-int ./ || true
  - curl --form token=${COVERTY_TOKEN} --form email=${RF_EMAIL} --form file=@./coverty.tar.gz --form version=1.0 --form description="Python Repo - (Travis CI Build)" https://scan.coverity.com/builds?project=reactive-firewall%2Fpython-repo || true

